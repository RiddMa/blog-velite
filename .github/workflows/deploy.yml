name: Deploy Next.js Project

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          npx prisma migrate dev --name init
          npm run build

      - name: Generate Cache Key
        id: cache-key
        run: echo "cache_key=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-app
          path: |
            .next
            .velite
            public
            package.json
            prisma
            node_modules/.prisma
            next.config.mjs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-app

      - name: Clean Previous Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.PROJECT_DIRECTORY }}
            rm -rf .next .velite public package.json prisma/migrations prisma/schema.prisma node_modules/.prisma next.config.mjs
            find prisma -type f ! -name 'prod.db' -delete

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ".next, .velite, public, package.json, prisma/migrations, prisma/schema.prisma, node_modules/.prisma, next.config.mjs"
          target: ${{ secrets.PROJECT_DIRECTORY }}

      - name: Install Dependencies on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.PROJECT_DIRECTORY }}
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            NODE_OPTIONS="--max-old-space-size=1536" yarn install
            NODE_OPTIONS="--max-old-space-size=1536" yarn add sharp --ignore-engines

      - name: Run Prisma Migrations on Server
        uses: appleboy/ssh-action@master
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: DATABASE_URL,API_KEY
          script: |
            cd ${{ secrets.PROJECT_DIRECTORY }}
            export NVM_DIR=~/.nvm 
            source ~/.nvm/nvm.sh
            npx prisma migrate deploy

      - name: Restart Server
        uses: appleboy/ssh-action@master
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: DATABASE_URL,API_KEY
          script: |
            cd ${{ secrets.PROJECT_DIRECTORY }}
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            pm2 list | grep "blog-velite" && pm2 restart "blog-velite" || pm2 start yarn --name "blog-velite" -- start
            pm2 save
